// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getTables(args?: GetTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetTablesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("materialize:index/getTables:GetTables", {
        "databaseName": args.databaseName,
        "schemaName": args.schemaName,
    }, opts);
}

/**
 * A collection of arguments for invoking GetTables.
 */
export interface GetTablesArgs {
    /**
     * Limit tables to a specific database
     */
    databaseName?: string;
    /**
     * Limit tables to a specific schema within a specific database
     */
    schemaName?: string;
}

/**
 * A collection of values returned by GetTables.
 */
export interface GetTablesResult {
    /**
     * Limit tables to a specific database
     */
    readonly databaseName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Limit tables to a specific schema within a specific database
     */
    readonly schemaName?: string;
    /**
     * The tables in the account
     */
    readonly tables: outputs.GetTablesTable[];
}

export function getTablesOutput(args?: GetTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTablesResult> {
    return pulumi.output(args).apply(a => getTables(a, opts))
}

/**
 * A collection of arguments for invoking GetTables.
 */
export interface GetTablesOutputArgs {
    /**
     * Limit tables to a specific database
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Limit tables to a specific schema within a specific database
     */
    schemaName?: pulumi.Input<string>;
}
