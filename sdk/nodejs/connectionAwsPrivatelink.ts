// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The connection resource allows you to manage connections in Materialize.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as materialize from "@pulumi/materialize";
 *
 * // # Create a AWS Private Connection
 * // Note: you need the max_aws_privatelink_connections increased for this to work:
 * // show max_aws_privatelink_connections;
 * const examplePrivatelinkConnection = new materialize.ConnectionAwsPrivatelink("example_privatelink_connection", {
 *     availabilityZones: [
 *         "use1-az2",
 *         "use1-az6",
 *     ],
 *     schemaName: "public",
 *     serviceName: "com.amazonaws.us-east-1.materialize.example",
 * });
 * ```
 *
 * ## Import
 *
 * #Connections can be imported using the connection id
 *
 * ```sh
 *  $ pulumi import materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink example <connection_id>
 * ```
 */
export class ConnectionAwsPrivatelink extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionAwsPrivatelink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionAwsPrivatelinkState, opts?: pulumi.CustomResourceOptions): ConnectionAwsPrivatelink {
        return new ConnectionAwsPrivatelink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink';

    /**
     * Returns true if the given object is an instance of ConnectionAwsPrivatelink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectionAwsPrivatelink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionAwsPrivatelink.__pulumiType;
    }

    /**
     * The availability zones of the AWS PrivateLink service.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * The type of connection.
     */
    public /*out*/ readonly connectionType!: pulumi.Output<string>;
    /**
     * The identifier for the connection database.
     */
    public readonly databaseName!: pulumi.Output<string | undefined>;
    /**
     * The identifier for the connection.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully qualified name of the connection.
     */
    public /*out*/ readonly qualifiedSqlName!: pulumi.Output<string>;
    /**
     * The identifier for the connection schema.
     */
    public readonly schemaName!: pulumi.Output<string | undefined>;
    /**
     * The name of the AWS PrivateLink service.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a ConnectionAwsPrivatelink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionAwsPrivatelinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionAwsPrivatelinkArgs | ConnectionAwsPrivatelinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionAwsPrivatelinkState | undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["qualifiedSqlName"] = state ? state.qualifiedSqlName : undefined;
            resourceInputs["schemaName"] = state ? state.schemaName : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as ConnectionAwsPrivatelinkArgs | undefined;
            if ((!args || args.availabilityZones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["schemaName"] = args ? args.schemaName : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["connectionType"] = undefined /*out*/;
            resourceInputs["qualifiedSqlName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectionAwsPrivatelink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConnectionAwsPrivatelink resources.
 */
export interface ConnectionAwsPrivatelinkState {
    /**
     * The availability zones of the AWS PrivateLink service.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of connection.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * The identifier for the connection database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The identifier for the connection.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully qualified name of the connection.
     */
    qualifiedSqlName?: pulumi.Input<string>;
    /**
     * The identifier for the connection schema.
     */
    schemaName?: pulumi.Input<string>;
    /**
     * The name of the AWS PrivateLink service.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectionAwsPrivatelink resource.
 */
export interface ConnectionAwsPrivatelinkArgs {
    /**
     * The availability zones of the AWS PrivateLink service.
     */
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier for the connection database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The identifier for the connection.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier for the connection schema.
     */
    schemaName?: pulumi.Input<string>;
    /**
     * The name of the AWS PrivateLink service.
     */
    serviceName: pulumi.Input<string>;
}
