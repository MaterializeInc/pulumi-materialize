// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package materialize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-materialize/sdk/go/materialize"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := materialize.GetIndexes(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetIndexes(ctx, &GetIndexesArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetIndexes(ctx, &GetIndexesArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//				SchemaName:   pulumi.StringRef("schema"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIndexes(ctx *pulumi.Context, args *GetIndexesArgs, opts ...pulumi.InvokeOption) (*GetIndexesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetIndexesResult
	err := ctx.Invoke("materialize:index/getIndexes:GetIndexes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetIndexes.
type GetIndexesArgs struct {
	// Limit indexes to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// Limit indexes to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
}

// A collection of values returned by GetIndexes.
type GetIndexesResult struct {
	// Limit indexes to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The indexes in the account
	Indexes []GetIndexesIndex `pulumi:"indexes"`
	// Limit indexes to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
}

func GetIndexesOutput(ctx *pulumi.Context, args GetIndexesOutputArgs, opts ...pulumi.InvokeOption) GetIndexesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIndexesResult, error) {
			args := v.(GetIndexesArgs)
			r, err := GetIndexes(ctx, &args, opts...)
			var s GetIndexesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIndexesResultOutput)
}

// A collection of arguments for invoking GetIndexes.
type GetIndexesOutputArgs struct {
	// Limit indexes to a specific database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Limit indexes to a specific schema within a specific database
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
}

func (GetIndexesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexesArgs)(nil)).Elem()
}

// A collection of values returned by GetIndexes.
type GetIndexesResultOutput struct{ *pulumi.OutputState }

func (GetIndexesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexesResult)(nil)).Elem()
}

func (o GetIndexesResultOutput) ToGetIndexesResultOutput() GetIndexesResultOutput {
	return o
}

func (o GetIndexesResultOutput) ToGetIndexesResultOutputWithContext(ctx context.Context) GetIndexesResultOutput {
	return o
}

// Limit indexes to a specific database
func (o GetIndexesResultOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIndexesResult) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIndexesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndexesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The indexes in the account
func (o GetIndexesResultOutput) Indexes() GetIndexesIndexArrayOutput {
	return o.ApplyT(func(v GetIndexesResult) []GetIndexesIndex { return v.Indexes }).(GetIndexesIndexArrayOutput)
}

// Limit indexes to a specific schema within a specific database
func (o GetIndexesResultOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIndexesResult) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIndexesResultOutput{})
}
