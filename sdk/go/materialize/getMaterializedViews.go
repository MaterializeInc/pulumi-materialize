// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package materialize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-materialize/sdk/go/materialize"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := materialize.GetMaterializedViews(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetMaterializedViews(ctx, &GetMaterializedViewsArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetMaterializedViews(ctx, &GetMaterializedViewsArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//				SchemaName:   pulumi.StringRef("schema"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaterializedViews(ctx *pulumi.Context, args *GetMaterializedViewsArgs, opts ...pulumi.InvokeOption) (*GetMaterializedViewsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetMaterializedViewsResult
	err := ctx.Invoke("materialize:index/getMaterializedViews:GetMaterializedViews", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMaterializedViews.
type GetMaterializedViewsArgs struct {
	// Limit materialized views to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// Limit materialized views to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
}

// A collection of values returned by GetMaterializedViews.
type GetMaterializedViewsResult struct {
	// Limit materialized views to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The materialized views in the account
	MaterializedViews []GetMaterializedViewsMaterializedView `pulumi:"materializedViews"`
	// Limit materialized views to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
}

func GetMaterializedViewsOutput(ctx *pulumi.Context, args GetMaterializedViewsOutputArgs, opts ...pulumi.InvokeOption) GetMaterializedViewsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaterializedViewsResult, error) {
			args := v.(GetMaterializedViewsArgs)
			r, err := GetMaterializedViews(ctx, &args, opts...)
			var s GetMaterializedViewsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaterializedViewsResultOutput)
}

// A collection of arguments for invoking GetMaterializedViews.
type GetMaterializedViewsOutputArgs struct {
	// Limit materialized views to a specific database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Limit materialized views to a specific schema within a specific database
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
}

func (GetMaterializedViewsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaterializedViewsArgs)(nil)).Elem()
}

// A collection of values returned by GetMaterializedViews.
type GetMaterializedViewsResultOutput struct{ *pulumi.OutputState }

func (GetMaterializedViewsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaterializedViewsResult)(nil)).Elem()
}

func (o GetMaterializedViewsResultOutput) ToGetMaterializedViewsResultOutput() GetMaterializedViewsResultOutput {
	return o
}

func (o GetMaterializedViewsResultOutput) ToGetMaterializedViewsResultOutputWithContext(ctx context.Context) GetMaterializedViewsResultOutput {
	return o
}

// Limit materialized views to a specific database
func (o GetMaterializedViewsResultOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaterializedViewsResult) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaterializedViewsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaterializedViewsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The materialized views in the account
func (o GetMaterializedViewsResultOutput) MaterializedViews() GetMaterializedViewsMaterializedViewArrayOutput {
	return o.ApplyT(func(v GetMaterializedViewsResult) []GetMaterializedViewsMaterializedView { return v.MaterializedViews }).(GetMaterializedViewsMaterializedViewArrayOutput)
}

// Limit materialized views to a specific schema within a specific database
func (o GetMaterializedViewsResultOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaterializedViewsResult) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaterializedViewsResultOutput{})
}
