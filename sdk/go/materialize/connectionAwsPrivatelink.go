// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package materialize

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The connection resource allows you to manage connections in Materialize.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-materialize/sdk/go/materialize"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := materialize.NewConnectionAwsPrivatelink(ctx, "examplePrivatelinkConnection", &materialize.ConnectionAwsPrivatelinkArgs{
//				AvailabilityZones: pulumi.StringArray{
//					pulumi.String("use1-az2"),
//					pulumi.String("use1-az6"),
//				},
//				SchemaName:  pulumi.String("public"),
//				ServiceName: pulumi.String("com.amazonaws.us-east-1.materialize.example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #Connections can be imported using the connection id
//
// ```sh
//
//	$ pulumi import materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink example <connection_id>
//
// ```
type ConnectionAwsPrivatelink struct {
	pulumi.CustomResourceState

	// The availability zones of the AWS PrivateLink service.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// The type of connection.
	ConnectionType pulumi.StringOutput `pulumi:"connectionType"`
	// The identifier for the connection database.
	DatabaseName pulumi.StringPtrOutput `pulumi:"databaseName"`
	// The identifier for the connection.
	Name pulumi.StringOutput `pulumi:"name"`
	// The fully qualified name of the connection.
	QualifiedSqlName pulumi.StringOutput `pulumi:"qualifiedSqlName"`
	// The identifier for the connection schema.
	SchemaName pulumi.StringPtrOutput `pulumi:"schemaName"`
	// The name of the AWS PrivateLink service.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewConnectionAwsPrivatelink registers a new resource with the given unique name, arguments, and options.
func NewConnectionAwsPrivatelink(ctx *pulumi.Context,
	name string, args *ConnectionAwsPrivatelinkArgs, opts ...pulumi.ResourceOption) (*ConnectionAwsPrivatelink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZones == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZones'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectionAwsPrivatelink
	err := ctx.RegisterResource("materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionAwsPrivatelink gets an existing ConnectionAwsPrivatelink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionAwsPrivatelink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionAwsPrivatelinkState, opts ...pulumi.ResourceOption) (*ConnectionAwsPrivatelink, error) {
	var resource ConnectionAwsPrivatelink
	err := ctx.ReadResource("materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionAwsPrivatelink resources.
type connectionAwsPrivatelinkState struct {
	// The availability zones of the AWS PrivateLink service.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The type of connection.
	ConnectionType *string `pulumi:"connectionType"`
	// The identifier for the connection database.
	DatabaseName *string `pulumi:"databaseName"`
	// The identifier for the connection.
	Name *string `pulumi:"name"`
	// The fully qualified name of the connection.
	QualifiedSqlName *string `pulumi:"qualifiedSqlName"`
	// The identifier for the connection schema.
	SchemaName *string `pulumi:"schemaName"`
	// The name of the AWS PrivateLink service.
	ServiceName *string `pulumi:"serviceName"`
}

type ConnectionAwsPrivatelinkState struct {
	// The availability zones of the AWS PrivateLink service.
	AvailabilityZones pulumi.StringArrayInput
	// The type of connection.
	ConnectionType pulumi.StringPtrInput
	// The identifier for the connection database.
	DatabaseName pulumi.StringPtrInput
	// The identifier for the connection.
	Name pulumi.StringPtrInput
	// The fully qualified name of the connection.
	QualifiedSqlName pulumi.StringPtrInput
	// The identifier for the connection schema.
	SchemaName pulumi.StringPtrInput
	// The name of the AWS PrivateLink service.
	ServiceName pulumi.StringPtrInput
}

func (ConnectionAwsPrivatelinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionAwsPrivatelinkState)(nil)).Elem()
}

type connectionAwsPrivatelinkArgs struct {
	// The availability zones of the AWS PrivateLink service.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The identifier for the connection database.
	DatabaseName *string `pulumi:"databaseName"`
	// The identifier for the connection.
	Name *string `pulumi:"name"`
	// The identifier for the connection schema.
	SchemaName *string `pulumi:"schemaName"`
	// The name of the AWS PrivateLink service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ConnectionAwsPrivatelink resource.
type ConnectionAwsPrivatelinkArgs struct {
	// The availability zones of the AWS PrivateLink service.
	AvailabilityZones pulumi.StringArrayInput
	// The identifier for the connection database.
	DatabaseName pulumi.StringPtrInput
	// The identifier for the connection.
	Name pulumi.StringPtrInput
	// The identifier for the connection schema.
	SchemaName pulumi.StringPtrInput
	// The name of the AWS PrivateLink service.
	ServiceName pulumi.StringInput
}

func (ConnectionAwsPrivatelinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionAwsPrivatelinkArgs)(nil)).Elem()
}

type ConnectionAwsPrivatelinkInput interface {
	pulumi.Input

	ToConnectionAwsPrivatelinkOutput() ConnectionAwsPrivatelinkOutput
	ToConnectionAwsPrivatelinkOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkOutput
}

func (*ConnectionAwsPrivatelink) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAwsPrivatelink)(nil)).Elem()
}

func (i *ConnectionAwsPrivatelink) ToConnectionAwsPrivatelinkOutput() ConnectionAwsPrivatelinkOutput {
	return i.ToConnectionAwsPrivatelinkOutputWithContext(context.Background())
}

func (i *ConnectionAwsPrivatelink) ToConnectionAwsPrivatelinkOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAwsPrivatelinkOutput)
}

// ConnectionAwsPrivatelinkArrayInput is an input type that accepts ConnectionAwsPrivatelinkArray and ConnectionAwsPrivatelinkArrayOutput values.
// You can construct a concrete instance of `ConnectionAwsPrivatelinkArrayInput` via:
//
//	ConnectionAwsPrivatelinkArray{ ConnectionAwsPrivatelinkArgs{...} }
type ConnectionAwsPrivatelinkArrayInput interface {
	pulumi.Input

	ToConnectionAwsPrivatelinkArrayOutput() ConnectionAwsPrivatelinkArrayOutput
	ToConnectionAwsPrivatelinkArrayOutputWithContext(context.Context) ConnectionAwsPrivatelinkArrayOutput
}

type ConnectionAwsPrivatelinkArray []ConnectionAwsPrivatelinkInput

func (ConnectionAwsPrivatelinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionAwsPrivatelink)(nil)).Elem()
}

func (i ConnectionAwsPrivatelinkArray) ToConnectionAwsPrivatelinkArrayOutput() ConnectionAwsPrivatelinkArrayOutput {
	return i.ToConnectionAwsPrivatelinkArrayOutputWithContext(context.Background())
}

func (i ConnectionAwsPrivatelinkArray) ToConnectionAwsPrivatelinkArrayOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAwsPrivatelinkArrayOutput)
}

// ConnectionAwsPrivatelinkMapInput is an input type that accepts ConnectionAwsPrivatelinkMap and ConnectionAwsPrivatelinkMapOutput values.
// You can construct a concrete instance of `ConnectionAwsPrivatelinkMapInput` via:
//
//	ConnectionAwsPrivatelinkMap{ "key": ConnectionAwsPrivatelinkArgs{...} }
type ConnectionAwsPrivatelinkMapInput interface {
	pulumi.Input

	ToConnectionAwsPrivatelinkMapOutput() ConnectionAwsPrivatelinkMapOutput
	ToConnectionAwsPrivatelinkMapOutputWithContext(context.Context) ConnectionAwsPrivatelinkMapOutput
}

type ConnectionAwsPrivatelinkMap map[string]ConnectionAwsPrivatelinkInput

func (ConnectionAwsPrivatelinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionAwsPrivatelink)(nil)).Elem()
}

func (i ConnectionAwsPrivatelinkMap) ToConnectionAwsPrivatelinkMapOutput() ConnectionAwsPrivatelinkMapOutput {
	return i.ToConnectionAwsPrivatelinkMapOutputWithContext(context.Background())
}

func (i ConnectionAwsPrivatelinkMap) ToConnectionAwsPrivatelinkMapOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAwsPrivatelinkMapOutput)
}

type ConnectionAwsPrivatelinkOutput struct{ *pulumi.OutputState }

func (ConnectionAwsPrivatelinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAwsPrivatelink)(nil)).Elem()
}

func (o ConnectionAwsPrivatelinkOutput) ToConnectionAwsPrivatelinkOutput() ConnectionAwsPrivatelinkOutput {
	return o
}

func (o ConnectionAwsPrivatelinkOutput) ToConnectionAwsPrivatelinkOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkOutput {
	return o
}

// The availability zones of the AWS PrivateLink service.
func (o ConnectionAwsPrivatelinkOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The type of connection.
func (o ConnectionAwsPrivatelinkOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringOutput { return v.ConnectionType }).(pulumi.StringOutput)
}

// The identifier for the connection database.
func (o ConnectionAwsPrivatelinkOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringPtrOutput { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The identifier for the connection.
func (o ConnectionAwsPrivatelinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The fully qualified name of the connection.
func (o ConnectionAwsPrivatelinkOutput) QualifiedSqlName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringOutput { return v.QualifiedSqlName }).(pulumi.StringOutput)
}

// The identifier for the connection schema.
func (o ConnectionAwsPrivatelinkOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringPtrOutput { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// The name of the AWS PrivateLink service.
func (o ConnectionAwsPrivatelinkOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionAwsPrivatelink) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

type ConnectionAwsPrivatelinkArrayOutput struct{ *pulumi.OutputState }

func (ConnectionAwsPrivatelinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionAwsPrivatelink)(nil)).Elem()
}

func (o ConnectionAwsPrivatelinkArrayOutput) ToConnectionAwsPrivatelinkArrayOutput() ConnectionAwsPrivatelinkArrayOutput {
	return o
}

func (o ConnectionAwsPrivatelinkArrayOutput) ToConnectionAwsPrivatelinkArrayOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkArrayOutput {
	return o
}

func (o ConnectionAwsPrivatelinkArrayOutput) Index(i pulumi.IntInput) ConnectionAwsPrivatelinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectionAwsPrivatelink {
		return vs[0].([]*ConnectionAwsPrivatelink)[vs[1].(int)]
	}).(ConnectionAwsPrivatelinkOutput)
}

type ConnectionAwsPrivatelinkMapOutput struct{ *pulumi.OutputState }

func (ConnectionAwsPrivatelinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionAwsPrivatelink)(nil)).Elem()
}

func (o ConnectionAwsPrivatelinkMapOutput) ToConnectionAwsPrivatelinkMapOutput() ConnectionAwsPrivatelinkMapOutput {
	return o
}

func (o ConnectionAwsPrivatelinkMapOutput) ToConnectionAwsPrivatelinkMapOutputWithContext(ctx context.Context) ConnectionAwsPrivatelinkMapOutput {
	return o
}

func (o ConnectionAwsPrivatelinkMapOutput) MapIndex(k pulumi.StringInput) ConnectionAwsPrivatelinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectionAwsPrivatelink {
		return vs[0].(map[string]*ConnectionAwsPrivatelink)[vs[1].(string)]
	}).(ConnectionAwsPrivatelinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAwsPrivatelinkInput)(nil)).Elem(), &ConnectionAwsPrivatelink{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAwsPrivatelinkArrayInput)(nil)).Elem(), ConnectionAwsPrivatelinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAwsPrivatelinkMapInput)(nil)).Elem(), ConnectionAwsPrivatelinkMap{})
	pulumi.RegisterOutputType(ConnectionAwsPrivatelinkOutput{})
	pulumi.RegisterOutputType(ConnectionAwsPrivatelinkArrayOutput{})
	pulumi.RegisterOutputType(ConnectionAwsPrivatelinkMapOutput{})
}
