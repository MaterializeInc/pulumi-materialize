// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package materialize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-materialize/sdk/go/materialize"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := materialize.GetSinks(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetSinks(ctx, &GetSinksArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = materialize.GetSinks(ctx, &GetSinksArgs{
//				DatabaseName: pulumi.StringRef("materialize"),
//				SchemaName:   pulumi.StringRef("schema"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSinks(ctx *pulumi.Context, args *GetSinksArgs, opts ...pulumi.InvokeOption) (*GetSinksResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSinksResult
	err := ctx.Invoke("materialize:index/getSinks:GetSinks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSinks.
type GetSinksArgs struct {
	// Limit sinks to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// Limit sinks to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
}

// A collection of values returned by GetSinks.
type GetSinksResult struct {
	// Limit sinks to a specific database
	DatabaseName *string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Limit sinks to a specific schema within a specific database
	SchemaName *string `pulumi:"schemaName"`
	// The sinks in the account
	Sinks []GetSinksSink `pulumi:"sinks"`
}

func GetSinksOutput(ctx *pulumi.Context, args GetSinksOutputArgs, opts ...pulumi.InvokeOption) GetSinksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSinksResult, error) {
			args := v.(GetSinksArgs)
			r, err := GetSinks(ctx, &args, opts...)
			var s GetSinksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSinksResultOutput)
}

// A collection of arguments for invoking GetSinks.
type GetSinksOutputArgs struct {
	// Limit sinks to a specific database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Limit sinks to a specific schema within a specific database
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
}

func (GetSinksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSinksArgs)(nil)).Elem()
}

// A collection of values returned by GetSinks.
type GetSinksResultOutput struct{ *pulumi.OutputState }

func (GetSinksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSinksResult)(nil)).Elem()
}

func (o GetSinksResultOutput) ToGetSinksResultOutput() GetSinksResultOutput {
	return o
}

func (o GetSinksResultOutput) ToGetSinksResultOutputWithContext(ctx context.Context) GetSinksResultOutput {
	return o
}

// Limit sinks to a specific database
func (o GetSinksResultOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSinksResult) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSinksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinksResult) string { return v.Id }).(pulumi.StringOutput)
}

// Limit sinks to a specific schema within a specific database
func (o GetSinksResultOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSinksResult) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// The sinks in the account
func (o GetSinksResultOutput) Sinks() GetSinksSinkArrayOutput {
	return o.ApplyT(func(v GetSinksResult) []GetSinksSink { return v.Sinks }).(GetSinksSinkArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSinksResultOutput{})
}
