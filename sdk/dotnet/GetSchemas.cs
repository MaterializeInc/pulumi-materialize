// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Materialize
{
    public static class GetSchemas
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Materialize = Pulumi.Materialize;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Materialize.GetSchemas.Invoke();
        /// 
        ///     var materialize = Materialize.GetSchemas.Invoke(new()
        ///     {
        ///         DatabaseName = "materialize",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSchemasResult> InvokeAsync(GetSchemasArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSchemasResult>("materialize:index/getSchemas:GetSchemas", args ?? new GetSchemasArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Materialize = Pulumi.Materialize;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Materialize.GetSchemas.Invoke();
        /// 
        ///     var materialize = Materialize.GetSchemas.Invoke(new()
        ///     {
        ///         DatabaseName = "materialize",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSchemasResult> Invoke(GetSchemasInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSchemasResult>("materialize:index/getSchemas:GetSchemas", args ?? new GetSchemasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchemasArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Limit schemas to a specific database
        /// </summary>
        [Input("databaseName")]
        public string? DatabaseName { get; set; }

        public GetSchemasArgs()
        {
        }
        public static new GetSchemasArgs Empty => new GetSchemasArgs();
    }

    public sealed class GetSchemasInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Limit schemas to a specific database
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        public GetSchemasInvokeArgs()
        {
        }
        public static new GetSchemasInvokeArgs Empty => new GetSchemasInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchemasResult
    {
        /// <summary>
        /// Limit schemas to a specific database
        /// </summary>
        public readonly string? DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The schemas in the account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchemasSchemaResult> Schemas;

        [OutputConstructor]
        private GetSchemasResult(
            string? databaseName,

            string id,

            ImmutableArray<Outputs.GetSchemasSchemaResult> schemas)
        {
            DatabaseName = databaseName;
            Id = id;
            Schemas = schemas;
        }
    }
}
