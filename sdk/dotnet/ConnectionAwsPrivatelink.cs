// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Materialize
{
    /// <summary>
    /// The connection resource allows you to manage connections in Materialize.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Materialize = Pulumi.Materialize;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // # Create a AWS Private Connection
    ///     // Note: you need the max_aws_privatelink_connections increased for this to work:
    ///     // show max_aws_privatelink_connections;
    ///     var examplePrivatelinkConnection = new Materialize.ConnectionAwsPrivatelink("examplePrivatelinkConnection", new()
    ///     {
    ///         AvailabilityZones = new[]
    ///         {
    ///             "use1-az2",
    ///             "use1-az6",
    ///         },
    ///         SchemaName = "public",
    ///         ServiceName = "com.amazonaws.us-east-1.materialize.example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// #Connections can be imported using the connection id
    /// 
    /// ```sh
    ///  $ pulumi import materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink example &lt;connection_id&gt;
    /// ```
    /// </summary>
    [MaterializeResourceType("materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink")]
    public partial class ConnectionAwsPrivatelink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The availability zones of the AWS PrivateLink service.
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        /// <summary>
        /// The type of connection.
        /// </summary>
        [Output("connectionType")]
        public Output<string> ConnectionType { get; private set; } = null!;

        /// <summary>
        /// The identifier for the connection database.
        /// </summary>
        [Output("databaseName")]
        public Output<string?> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// The identifier for the connection.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the connection.
        /// </summary>
        [Output("qualifiedSqlName")]
        public Output<string> QualifiedSqlName { get; private set; } = null!;

        /// <summary>
        /// The identifier for the connection schema.
        /// </summary>
        [Output("schemaName")]
        public Output<string?> SchemaName { get; private set; } = null!;

        /// <summary>
        /// The name of the AWS PrivateLink service.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectionAwsPrivatelink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectionAwsPrivatelink(string name, ConnectionAwsPrivatelinkArgs args, CustomResourceOptions? options = null)
            : base("materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink", name, args ?? new ConnectionAwsPrivatelinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectionAwsPrivatelink(string name, Input<string> id, ConnectionAwsPrivatelinkState? state = null, CustomResourceOptions? options = null)
            : base("materialize:index/connectionAwsPrivatelink:ConnectionAwsPrivatelink", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/MaterializeInc/pulumi-materialize",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectionAwsPrivatelink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectionAwsPrivatelink Get(string name, Input<string> id, ConnectionAwsPrivatelinkState? state = null, CustomResourceOptions? options = null)
        {
            return new ConnectionAwsPrivatelink(name, id, state, options);
        }
    }

    public sealed class ConnectionAwsPrivatelinkArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZones", required: true)]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// The availability zones of the AWS PrivateLink service.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// The identifier for the connection database.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The identifier for the connection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The identifier for the connection schema.
        /// </summary>
        [Input("schemaName")]
        public Input<string>? SchemaName { get; set; }

        /// <summary>
        /// The name of the AWS PrivateLink service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ConnectionAwsPrivatelinkArgs()
        {
        }
        public static new ConnectionAwsPrivatelinkArgs Empty => new ConnectionAwsPrivatelinkArgs();
    }

    public sealed class ConnectionAwsPrivatelinkState : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// The availability zones of the AWS PrivateLink service.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// The type of connection.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// The identifier for the connection database.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The identifier for the connection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The fully qualified name of the connection.
        /// </summary>
        [Input("qualifiedSqlName")]
        public Input<string>? QualifiedSqlName { get; set; }

        /// <summary>
        /// The identifier for the connection schema.
        /// </summary>
        [Input("schemaName")]
        public Input<string>? SchemaName { get; set; }

        /// <summary>
        /// The name of the AWS PrivateLink service.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        public ConnectionAwsPrivatelinkState()
        {
        }
        public static new ConnectionAwsPrivatelinkState Empty => new ConnectionAwsPrivatelinkState();
    }
}
